package com.criticalfusion.thenandnow.view.nav{	import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.events.MouseEvent;
		public class BaseButton extends MovieClip	{				protected var _enabled:Boolean = true;		public var onClick:Function;				public function BaseButton()		{			super();			this.cacheAsBitmap = true;			this.buttonMode = true;						this.gotoAndStop("up");			isEnabled = true;					}				protected function addListeners():void		{			this.buttonMode = this.useHandCursor = true;			this.addEventListener(MouseEvent.ROLL_OUT, onRollOut, false, 0, true);			this.addEventListener(MouseEvent.ROLL_OVER, onRollOver, false, 0, true);			this.addEventListener(MouseEvent.MOUSE_DOWN, onButtonDown, false, 0, true);			this.addEventListener(MouseEvent.MOUSE_UP, onRollOver, false, 0, true);			this.addEventListener(MouseEvent.CLICK, onButtonClicked, false, 0, true);		}				protected function removeListeners():void		{			this.buttonMode = this.useHandCursor = false;			this.removeEventListener(MouseEvent.ROLL_OUT, onRollOut);			this.removeEventListener(MouseEvent.ROLL_OVER, onRollOver);			this.removeEventListener(MouseEvent.MOUSE_DOWN, onButtonDown);			this.removeEventListener(MouseEvent.MOUSE_UP, onRollOver);			this.removeEventListener(MouseEvent.CLICK, onButtonClicked);		}				protected function onRollOver(event:MouseEvent):void		{			this.gotoAndStop("over");		}				protected function onRollOut(event:MouseEvent):void		{			this.gotoAndStop("up");		}				protected function onButtonDown(event:MouseEvent):void		{			this.gotoAndStop("down");		}				protected function onButtonClicked(event:MouseEvent):void		{			if(_enabled && onClick != null) onClick();		}				final public function set isEnabled(value:Boolean):void		{			_enabled = value;			var _state:String = _enabled ? "up" : "inactive";			_enabled ? addListeners() : removeListeners();			this.gotoAndStop(_state);		}				final public function get isEnabled():Boolean		{			return _enabled;		}	}}